image: maven:3-openjdk-11

cache:
  - key: maven-cache
    paths:
      - .m2/repository
  - key: target-cache
    paths:
      - ./commons-logging/target
      - ./core/target
      - ./elf4j/target
      - ./jdk-platform-logging/target
      - ./slf4j/target
      - ./tinylog-provider/target
      - ./tinylog-writer/target

variables:
  MAVEN_CLI_OPTS: >-
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository

build:
  stage: build
  script:
    - ./mvnw $MAVEN_CLI_OPTS compile

verify:development:
  stage: test
  script:
    - ./mvnw $MAVEN_CLI_OPTS verify
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, "instructions covered"; print 100*covered/instructions, "% covered" }' `find . -name jacoco.csv -print`
    - bash <(curl -Ls https://coverage.codacy.com/get.sh)
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - when: always
  coverage: '/(\d+\.?\d*) \% covered/'
  artifacts:
    expire_in: 1 week
    reports:
      coverage_report:
        coverage_format: jacoco
        path: '**/jacoco.xml'
      junit:
        - '**/TEST-io.github.vitalijr2.logging.mock.*.xml'

verify:default:
  stage: test
  script:
    - ./mvnw $MAVEN_CLI_OPTS clean verify
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, "instructions covered"; print 100*covered/instructions, "% covered" }' `find . -name jacoco.csv -print`
    - bash <(curl -Ls https://coverage.codacy.com/get.sh)
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - when: never
  coverage: '/(\d+\.?\d*) \% covered/'
  artifacts:
    expire_in: 1 year
    reports:
      coverage_report:
        coverage_format: jacoco
        path: '**/jacoco.xml'
      junit:
        - '**/TEST-io.github.vitalijr2.logging.mock.*.xml'
