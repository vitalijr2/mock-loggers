<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>mock-loggers</artifactId>
  <build>
    <defaultGoal>clean verify</defaultGoal>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>central-publishing-maven-plugin</artifactId>
          <groupId>org.sonatype.central</groupId>
          <version>0.7.0</version>
        </plugin>
        <plugin>
          <artifactId>flatten-maven-plugin</artifactId>
          <configuration>
            <flattenMode>ossrh</flattenMode>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>flatten</goal>
              </goals>
              <id>flatten</id>
              <phase>process-resources</phase>
            </execution>
            <execution>
              <goals>
                <goal>clean</goal>
              </goals>
              <id>clean</id>
              <phase>clean</phase>
            </execution>
          </executions>
          <groupId>org.codehaus.mojo</groupId>
          <version>1.6.0</version>
        </plugin>
        <plugin>
          <artifactId>jacoco-maven-plugin</artifactId>
          <executions>
            <execution>
              <configuration>
                <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
              </configuration>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <id>prepare-agent</id>
            </execution>
            <execution>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
              <id>prepare-agent-integration</id>
            </execution>
            <execution>
              <configuration>
                <destFile>${project.build.directory}/jacoco.exec</destFile>
                <fileSets>
                  <fileSet>
                    <directory>${project.build.directory}</directory>
                    <includes>
                      <include>*.exec</include>
                    </includes>
                  </fileSet>
                </fileSets>
              </configuration>
              <goals>
                <goal>merge</goal>
              </goals>
              <id>merge-results</id>
              <phase>verify</phase>
            </execution>
            <execution>
              <configuration>
                <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
              </configuration>
              <goals>
                <goal>report</goal>
              </goals>
              <id>report</id>
              <phase>verify</phase>
            </execution>
            <execution>
              <configuration>
                <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                <rules>
                  <rule>
                    <element>BUNDLE</element>
                    <limits>
                      <limit>
                        <counter>COMPLEXITY</counter>
                        <minimum>0.72</minimum>
                        <value>COVEREDRATIO</value>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
              <goals>
                <goal>check</goal>
              </goals>
              <id>check-coverage</id>
              <phase>verify</phase>
            </execution>
          </executions>
          <groupId>org.jacoco</groupId>
          <version>0.8.12</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.4.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <release>${java.version}</release>
            <showDeprecation>true</showDeprecation>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.14.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration>
            <forkCount>1</forkCount>
            <includes>
              <include>**/*Test.java</include>
            </includes>
            <properties>
              <groups>slow</groups>
            </properties>
            <reuseForks>false</reuseForks>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.1.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-invoker-plugin</artifactId>
          <configuration>
            <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
            <goals>
              <goal>clean</goal>
              <goal>verify</goal>
            </goals>
            <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
            <pomIncludes>
              <pomInclude>*/pom.xml</pomInclude>
            </pomIncludes>
            <postBuildHookScript>verify</postBuildHookScript>
            <settingsFile>src/it/settings.xml</settingsFile>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>install</goal>
                <goal>run</goal>
              </goals>
              <id>integration-test</id>
            </execution>
          </executions>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.9.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifestEntries>
                <Created-By>${java.vm.version} (${java.vm.vendor})</Created-By>
                <Name>${project.name}</Name>
              </manifestEntries>
            </archive>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <additionalJOptions>
              <additionalJOption>
                -J-Dhttp.agent=maven-javadoc-plugin_${project.groupId}:${project.artifactId}
              </additionalJOption>
            </additionalJOptions>
            <additionalOptions>
              <additionalOption>--allow-script-in-comments</additionalOption>
            </additionalOptions>
            <bottom><![CDATA[
<script type="text/javascript" src="{@docRoot}/resources/prism.js"></script>
							]]></bottom>
            <docfilessubdirs>true</docfilessubdirs>
            <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
            <links>
              <link>https://javadoc.io/doc/org.mockito/mockito-core/${mockito.version}/</link>
              <link>https://javadoc.io/doc/org.junit.jupiter/junit-jupiter-api/${junit.version}/</link>
            </links>
            <offline>false</offline>
            <show>public</show>
            <top><![CDATA[
<link rel="stylesheet" type="text/css" href="{@docRoot}/resources/prism.css"/>
<link rel="stylesheet" type="text/css" href="{@docRoot}/resources/mock-loggers.css"/>
							]]></top>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${javadoc-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
            <propertiesEncoding>ISO-8859-1</propertiesEncoding>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <properties>
              <groups>fast</groups>
            </properties>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.5.2</version>
        </plugin>
        <plugin>
          <artifactId>semver-maven-plugin</artifactId>
          <groupId>io.github.q3769</groupId>
          <version>20240116.0.202411140438</version>
        </plugin>
        <plugin>
          <artifactId>sign-maven-plugin</artifactId>
          <groupId>org.simplify4u.plugins</groupId>
          <version>1.1.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <rules>
            <requireJavaVersion>
              <version>[${java.version},)</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>[3.9.0,)</version>
            </requireMavenVersion>
          </rules>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <id>enforce-maven</id>
          </execution>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <id>enforce-clean</id>
            <phase>pre-clean</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.5.0</version>
      </plugin>
      <plugin>
        <artifactId>flatten-maven-plugin</artifactId>
        <groupId>org.codehaus.mojo</groupId>
      </plugin>
    </plugins>
  </build>
  <ciManagement>
    <system>GitHub Actions</system>
    <url>https://github.com/vitalijr2/mock-loggers/actions</url>
  </ciManagement>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <artifactId>annotations</artifactId>
        <groupId>org.jetbrains</groupId>
        <scope>provided</scope>
        <version>26.0.2</version>
      </dependency>
      <dependency>
        <artifactId>hamcrest</artifactId>
        <groupId>org.hamcrest</groupId>
        <scope>test</scope>
        <version>3.0</version>
      </dependency>
      <dependency>
        <artifactId>junit-jupiter-api</artifactId>
        <groupId>org.junit.jupiter</groupId>
        <scope>test</scope>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <artifactId>junit-jupiter-engine</artifactId>
        <groupId>org.junit.jupiter</groupId>
        <scope>test</scope>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <artifactId>junit-jupiter-params</artifactId>
        <groupId>org.junit.jupiter</groupId>
        <scope>test</scope>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <artifactId>mockito-core</artifactId>
        <groupId>org.mockito</groupId>
        <scope>test</scope>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <artifactId>mockito-junit-jupiter</artifactId>
        <groupId>org.mockito</groupId>
        <scope>test</scope>
        <version>${mockito.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <description>
    Different logging services with mock loggers backed by Mockito.
    Now this library implements JDK Platform Logging and Apache Commons Logging.
  </description>
  <developers>
    <developer>
      <email>vitalij_r2@outlook.com</email>
      <id>vitalijr2</id>
      <name>Vitalij Berdinskih</name>
      <timezone>Europe/Kyiv</timezone>
      <url>https://github.com/vitalijr2</url>
    </developer>
  </developers>
  <groupId>io.github.vitalijr2.logging</groupId>
  <inceptionYear>2024</inceptionYear>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/vitalijr2/mock-loggers/issues</url>
  </issueManagement>
  <licenses>
    <license>
      <comments>See THIRD-PARTY.txt for third-party licenses.</comments>
      <distribution>repo</distribution>
      <name>Apache 2</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <modelVersion>4.0.0</modelVersion>
  <modules>
    <module>bom</module>
    <module>commons-logging</module>
    <module>core</module>
    <module>elf4j</module>
    <module>jdk-platform-logging</module>
    <module>slf4j</module>
    <module>tinylog-provider</module>
    <module>tinylog-writer</module>
  </modules>
  <name>Mock Loggers</name>
  <packaging>pom</packaging>
  <profiles>
    <profile>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>license-maven-plugin</artifactId>
              <executions>
                <execution>
                  <configuration>
                    <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                    <excludeTransitiveDependencies>true</excludeTransitiveDependencies>
                    <excludedGroups>io\.github\.vitalijr2\.logging</excludedGroups>
                    <excludedScopes>test</excludedScopes>
                    <excludes>
                      <exclude>**/package-info.java</exclude>
                    </excludes>
                    <inceptionYear>${project.inceptionYear}</inceptionYear>
                    <!-- @formatter:off -->
                    <licenseMerges>
                      <licenseMerge>Apache License version 2.0|The Apache Software License, Version 2.0|The Apache License, Version 2.0|Apache License, Version 2.0|Apache-2.0|Apache 2</licenseMerge>
                      <licenseMerge>Eclipse Public License - v 2.0|Eclipse Public License v2.0</licenseMerge>
                      <licenseMerge>MIT License|MIT</licenseMerge>
                    </licenseMerges>
                    <licenseName>apache_v2</licenseName>
                    <!-- @formatter:on -->
                    <organizationName>Vitalij Berdinskih</organizationName>
                    <outputDirectory>${project.basedir}</outputDirectory>
                    <processEndTag>---------------LICENSE_END-------------------</processEndTag>
                    <processStartTag>---------------LICENSE_START-----------------</processStartTag>
                    <projectName>Mock Loggers</projectName>
                    <roots>
                      <root>src/main/java</root>
                    </roots>
                    <sectionDelimiter>---------------------------------------------</sectionDelimiter>
                    <trimHeaderLine>true</trimHeaderLine>
                  </configuration>
                  <id>default-cli</id>
                </execution>
              </executions>
              <groupId>org.codehaus.mojo</groupId>
              <version>2.5.0</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <artifactId>license-maven-plugin</artifactId>
            <configuration>
              <skipCheckLicense>true</skipCheckLicense>
            </configuration>
            <groupId>org.codehaus.mojo</groupId>
          </plugin>
        </plugins>
      </build>
      <id>prepare-and-check</id>
    </profile>
    <profile>
      <build>
        <defaultGoal>clean deploy</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>central-publishing-maven-plugin</artifactId>
            <configuration>
              <ignorePublishedComponents>true</ignorePublishedComponents>
              <publishingServerId>central</publishingServerId>
            </configuration>
            <extensions>true</extensions>
            <groupId>org.sonatype.central</groupId>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
                <id>attach-javadocs</id>
              </execution>
            </executions>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
                <id>attach-sources</id>
              </execution>
            </executions>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
          <plugin>
            <artifactId>sign-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
            <groupId>org.simplify4u.plugins</groupId>
          </plugin>
        </plugins>
      </build>
      <id>release</id>
    </profile>
    <profile>
      <build>
        <defaultGoal>clean install</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
            <groupId>org.jacoco</groupId>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
          <plugin>
            <artifactId>maven-install-plugin</artifactId>
            <configuration>
              <installAtEnd>false</installAtEnd>
            </configuration>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
            <groupId>org.apache.maven.plugins</groupId>
          </plugin>
        </plugins>
      </build>
      <id>run-its</id>
    </profile>
  </profiles>
  <properties>
    <java.version>11</java.version>
    <javadoc-plugin.version>3.11.2</javadoc-plugin.version>
    <junit.version>5.11.4</junit.version>
    <mockito.version>5.15.2</mockito.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  <scm>
    <connection>scm:git:https://github.com/vitalijr2/mock-loggers.git</connection>
    <developerConnection>scm:git:git@github.com:vitalijr2/mock-loggers.git</developerConnection>
    <url>https://github.com/vitalijr2/mock-loggers</url>
  </scm>
  <url>https://github.com/vitalijr2/mock-loggers</url>
  <version>1.2.0</version>
</project>
